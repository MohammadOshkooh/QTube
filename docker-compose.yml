services:
  app:
    container_name: app
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn core.wsgi:application -c gunicorn_config.conf --reload"

    volumes:
      - .:/code/back/
    ports:
      - "8002:8002"
    networks:
      - main
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Tehran
    restart: on-failure

  redis:
    container_name: redis
    image: docker.arvancloud.ir/redis:7.2
    ports:
      - "6379:3679"
    restart: on-failure
    environment:
      - TZ=Asia/Tehran
    networks:
      - main


  postgres:
    container_name: postgres
    image: docker.arvancloud.ir/postgres:16.1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - TZ=Asia/Tehran
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main
    ports:
      - "5433:5432"
    mem_limit: 1gb



  celery_worker:
    container_name: celery_worker
    build: .
    command: sh -c "celery -A core worker -l INFO"
    depends_on:
      - app
    environment:
      - TZ=Asia/Tehran
      - C_FORCE_ROOT=true
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - main
    restart: on-failure
    volumes:
      - .:/code/back/


  celery_beat:
    container_name: celery_beat
    build: .
    command: "celery -A core beat -l info"
    networks:
      - main
    depends_on:
      - app
    environment:
      - TZ=Asia/Tehran
      - CELERY_BROKER_URL=redis://redis:6379/0
    restart: on-failure
    volumes:
      - .:/code/back/



networks:
  main:

volumes:
  postgres_data: